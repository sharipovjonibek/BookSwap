import os
import secrets

from django.contrib.auth import get_user_model
from django.core.management.base import BaseCommand


class Command(BaseCommand):
    help = "Create a default Django superuser if one does not already exist."

    def handle(self, *args, **options):
        User = get_user_model()

        if User.objects.filter(is_superuser=True).exists():
            self.stdout.write(self.style.SUCCESS("Superuser already exists; skipping creation."))
            return

        username = os.getenv("DJANGO_SUPERUSER_USERNAME", "admin").strip() or "admin"
        email = os.getenv("DJANGO_SUPERUSER_EMAIL", f"{username}@example.com").strip()
        password = os.getenv("DJANGO_SUPERUSER_PASSWORD")

        generated_password = False
        if not password:
            password = secrets.token_urlsafe(16)
            generated_password = True

        user, created = User.objects.get_or_create(
            username=username,
            defaults={
                "email": email,
                "is_staff": True,
                "is_superuser": True,
            },
        )

        if created:
            user.set_password(password)
            user.save(update_fields=["password"])
            if generated_password:
                self.stdout.write(
                    self.style.WARNING(
                        "Created superuser with autogenerated credentials. "
                        f"username='{username}' password='{password}'"
                    )
                )
            else:
                self.stdout.write(
                    self.style.SUCCESS(
                        f"Created superuser '{username}' from environment credentials."
                    )
                )
            return

        # If the user already exists but was not marked as a superuser, upgrade it
        update_fields = []
        if not user.is_superuser:
            user.is_superuser = True
            update_fields.append("is_superuser")
        if not user.is_staff:
            user.is_staff = True
            update_fields.append("is_staff")
        if user.email != email and email:
            user.email = email
            update_fields.append("email")
        if update_fields:
            user.save(update_fields=update_fields)

        if generated_password:
            user.set_password(password)
            user.save(update_fields=["password"])
            self.stdout.write(
                self.style.WARNING(
                    "Updated existing user to superuser and reset password. "
                    f"username='{username}' password='{password}'"
                )
            )
        else:
            self.stdout.write(
                self.style.SUCCESS(
                    f"Ensured existing user '{username}' has superuser privileges."
                )
            )
